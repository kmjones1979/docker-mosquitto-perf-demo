js_include /etc/nginx/js.d/mqtt.js;
js_set     $mqtt_client_id setClientId;

log_format mqtt '$remote_addr [$time_local] $protocol $status $bytes_received ' 
                '$bytes_sent $upstream_addr $mqtt_client_id'; # Include MQTT ClientId

upstream mosquitto_mq {
    server 127.0.0.1:18831 max_fails=0; #node1
    server 127.0.0.1:18832 max_fails=0; #node2
    server 127.0.0.1:18833 max_fails=0; #node3
    server 127.0.0.1:18834 max_fails=0; #node4
    server 127.0.0.1:18835 max_fails=0; #node5
    server 127.0.0.1:18836 max_fails=0; #node6
    server 127.0.0.1:18837 max_fails=0; #node7
    server 127.0.0.1:18838 max_fails=0; #node8
    server 127.0.0.1:18839 max_fails=0; #node9
    zone mosquitto_mq 64k;
    hash $mqtt_client_id consistent; # Session persistence keyed against ClientId
}

server {
    listen 1883 reuseport backlog=65000;
    preread_buffer_size 1k; # Big enough to read CONNECT packet header
    js_preread getClientId; # Parse CONNECT packet for ClientId

    status_zone mosquitto-mq_1883;

    proxy_pass mosquitto_mq;
    proxy_connect_timeout 10s;

    access_log /var/log/nginx/mosquitto_access.log mqtt;
    error_log  /var/log/nginx/mosquitto_error.log info; # nginScript debug logging
}

# vim: syntax=nginx
